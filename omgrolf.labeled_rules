module OMGROFL-SYNTAX
imports AUTO-INCLUDED-MODULE-SYNTAX
rule `'rofl_!`(GeneratedAnonVar1) => GeneratedAnonVar1 ~> #freezer(`'rofl_!`(HOLE)) when `'_=/=K_`(`isKResult`(GeneratedAnonVar1),#token{"#Bool","true"})
rule GeneratedAnonVar1 ~> #freezer(`'rofl_!`(HOLE)) => `'rofl_!`(GeneratedAnonVar1) when `isKResult`(GeneratedAnonVar1)
endmodule
module OMGROFL
imports AUTO-INCLUDED-MODULE
imports OMGROFL-SYNTAX
configuration <T><k>$PGM:Stmts</k><state>`'.Map`()</state><in>`'.List`()</in><out>`'.List`()</out></T>
rule <k>`'addId`(X:Id) => .K...</k><state>...`'_Map_`(Rho:Map, `'.Map`() => `'_|->_`(X, #token{"#Int","0"}))...</state>
rule <k>`'addIdValue`(X:Id, I:Int) => .K...</k><state>...`'_Map_`(Rho:Map, `'_|->_`(X, _ => I))...</state>
rule <k>`'_iz_!`(X:Id, I:Int) => `'addId`(X) ~> `'addIdValue`(X, I)...</k>
rule <k>`'rofl_!`(X:Id) => .K...</k><state>...`'_|->_`(X, I)...</state><out>`'.List`() => `'ListItem`(`chrChar`(I))</out>
rule `'rofl_!`(GeneratedAnonVar1) => GeneratedAnonVar1 ~> #freezer(`'rofl_!`(HOLE)) when `'_=/=K_`(`isKResult`(GeneratedAnonVar1),#token{"#Bool","true"})
rule GeneratedAnonVar1 ~> #freezer(`'rofl_!`(HOLE)) => `'rofl_!`(GeneratedAnonVar1) when `isKResult`(GeneratedAnonVar1)
endmodule
